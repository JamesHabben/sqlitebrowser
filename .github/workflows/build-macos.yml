name: Build - macOS

on:
  workflow_call:

jobs:
  build:
    name: ${{ matrix.os }} - SQLCipher ${{ matrix.sqlcipher }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-14]
        sqlcipher: ["0", "1"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Uninstall Mono, which is included by default in GitHub-hosted macOS runners,
      # as it interferes with referencing our own compiled SQLite libraries.
      - name: Uninstall Mono
        run: |
          sudo rm -rfv /Library/Frameworks/Mono.framework
          sudo pkgutil --forget com.xamarin.mono-MDK.pkg
          sudo rm /etc/paths.d/mono-commands

      - name: Install dependencies
        run: |
          brew update
          brew tap sqlitebrowser/tap
          brew install db4subqt@5 db4subsqlcipher db4subsqlitefts@5 ninja
          npm install -g appdmg

      - name: Configure build
        run: |
          if [ "${{ matrix.sqlcipher }}" = "1" ]; then
              sed -i "" 's/"DB Browser for SQLite"/"DB Browser for SQLCipher-v3.13.0-rc2"/' CMakeLists.txt
          else
              sed -i "" 's/"DB Browser for SQLite"/"DB Browser for SQLite-v3.13.0-rc2"/' CMakeLists.txt
          fi

          mkdir build && cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DcustomTap=1 -DENABLE_TESTING=ON -Dsqlcipher=${{ matrix.sqlcipher }} ..

      - name: Build
        working-directory: ./build
        run: ninja

      - name: Tests
        working-directory: ./build
        run: ninja test

      - name: Build Extension
        run: clang -I /opt/homebrew/opt/db4subsqlitefts@5/include -L /opt/homebrew/opt/db4subsqlitefts@5/lib -fno-common -dynamiclib src/extensions/extension-formats.c

      - if: github.event_name != 'pull_request'
        name: Notarization
        id: notarization
        run: chmod +x ./installer/macos/notarize.sh && ./installer/macos/notarize.sh
        env:
          APPLE_ID: ${{ secrets.MACOS_CODESIGN_APPLE_ID }}
          APPLE_PW: ${{ secrets.MACOS_CODESIGN_APPLE_PW }}
          DEV_ID: ${{ secrets.MACOS_CODESIGN_DEV_ID }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KEYCHAIN_PW: ${{ secrets.MACOS_CODESIGN_KEYCHAIN_PW }}
          P12: ${{ secrets.MACOS_CODESIGN_P12 }}
          P12_PW: ${{ secrets.MACOS_CODESIGN_P12_PW }}
          SQLCIPHER: ${{ matrix.sqlcipher }}
          TEAM_ID: ${{ secrets.MACOS_CODESIGN_TEAM_ID }}

      - if: steps.notarization.conclusion != 'skipped'
        name: Clear Keychain
        run: security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
        continue-on-error: true

      - if: github.event_name != 'pull_request'
        name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}-${{ matrix.sqlcipher }}
          path: DB.Browser.for.*.dmg
